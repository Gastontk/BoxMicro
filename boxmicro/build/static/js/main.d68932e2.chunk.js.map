{"version":3,"sources":["Components/mapPage.js","Keys/keys.js","App.js","serviceWorker.js","index.js"],"names":["DrawingMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","markerProps","initMap","bind","assertThisInitialized","mapProps","map","google","drawingManager","maps","drawing","DrawingManager","drawingMode","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","OverlayType","POLYGON","markerOptions","icon","polygonOptions","fillColor","setDrawingMode","input","document","getElementById","searchBox","places","SearchBox","console","log","markers","addListener","getPlaces","length","forEach","marker","setMap","bounds","LatLngBounds","place","geometry","url","size","Size","origin","Point","anchor","scaledSize","push","Marker","title","name","location","viewport","union","extend","fitBounds","polygonArray","myMarkers","polygon","event","coordinates","getPath","getArray","setTimeout","info","dimensionsString","coord","index","lat","lng","distance","distanceInKmBetweenEarthCoordinates","toFixed","sqFeet","spherical","computeArea","value","infowindow","InfoWindow","content","open","Map","close","addEventListener","degreesToRadians","degrees","Math","PI","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","react_default","createElement","type","id","placeholder","defaultChecked","style","color","fontSize","border","dist","width","height","marginLeft","window","onReady","onClick","onMapClicked","initialCenter","zoom","scaleControl","eMapApiInternals","React","Component","GoogleApiWrapper","apiKey","libraries","App","className","mapPage","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d68932e2.chunk.js","sourcesContent":["import React from \"react\";\nimport GOOGLE_API_KEY from \"../Keys/keys\";\nimport {\n\tMap,\n\tInfoWindow,\n\tGoogleApiWrapper,\n\tPolygon,\n\tMarker,\n\tPlaces,\n\tSearchBox\n} from \"google-maps-react\";\n\nclass DrawingMap extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.markerProps = {};\n\n\t\tthis.initMap = this.initMap.bind(this);\n\t}\n\n\tinitMap(mapProps, map) {\n\t\tconst { google } = mapProps;\n\n\t\tconst drawingManager = new google.maps.drawing.DrawingManager({\n\t\t\tdrawingMode: null,\n\t\t\tdrawingControl: true,\n\t\t\tdrawingControlOptions: {\n\t\t\t\tposition: google.maps.ControlPosition.TOP_CENTER,\n\t\t\t\tdrawingModes: [\n\t\t\t\t\t// google.maps.drawing.OverlayType.MARKER,\n\t\t\t\t\tgoogle.maps.drawing.OverlayType.POLYGON\n\t\t\t\t]\n\t\t\t},\n\t\t\tmarkerOptions: {\n\t\t\t\ticon:\n\t\t\t\t\t\"https://developers.google.com/maps/documentation/javascript/examples/full/images/parking.png\"\n\t\t\t},\n\t\t\tpolygonOptions: {\n\t\t\t\tfillColor: \"#00FF0\"\n\t\t\t},\n\t\t\tmap: map\n\t\t});\n\t\tdrawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n\n\t\t//search bar\n\t\t// Create the search box and link it to the UI element.\n\t\tvar input = document.getElementById(\"searchWindow\");\n\t\tlet searchBox = new google.maps.places.SearchBox(input);\n\t\t// map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);\n\n\t\t// Listen for the event fired when the user selects a prediction and retrieve\n\t\t// more details for that place.\n\n\t\tconsole.log(\"searchBox is \", searchBox);\n\n\t\tvar markers = [];\n\t\tsearchBox.addListener(\"places_changed\", function() {\n\t\t\tconsole.log(\"places changed.\");\n\t\t\tvar places = searchBox.getPlaces();\n\n\t\t\tif (places.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Clear out the old markers.\n\t\t\tmarkers.forEach(function(marker) {\n\t\t\t\tmarker.setMap(null);\n\t\t\t});\n\t\t\tmarkers = [];\n\n\t\t\t// For each place, get the icon, name and location.\n\t\t\tvar bounds = new google.maps.LatLngBounds();\n\t\t\tplaces.forEach(function(place) {\n\t\t\t\tif (!place.geometry) {\n\t\t\t\t\tconsole.log(\"Returned place contains no geometry\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar icon = {\n\t\t\t\t\turl: place.icon,\n\t\t\t\t\tsize: new google.maps.Size(71, 71),\n\t\t\t\t\torigin: new google.maps.Point(0, 0),\n\t\t\t\t\tanchor: new google.maps.Point(17, 34),\n\t\t\t\t\tscaledSize: new google.maps.Size(25, 25)\n\t\t\t\t};\n\n\t\t\t\t// Create a marker for each place.\n\t\t\t\tmarkers.push(\n\t\t\t\t\tnew google.maps.Marker({\n\t\t\t\t\t\tmap: map,\n\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\ttitle: place.name,\n\t\t\t\t\t\tposition: place.geometry.location\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tif (place.geometry.viewport) {\n\t\t\t\t\t// Only geocodes have viewport.\n\t\t\t\t\tbounds.union(place.geometry.viewport);\n\t\t\t\t} else {\n\t\t\t\t\tbounds.extend(place.geometry.location);\n\t\t\t\t}\n\t\t\t\t// bounds.extend(place.geometry.location);\n\t\t\t});\n\t\t\tmap.fitBounds(bounds);\n\t\t});\n\n\t\t//polygon testing\n\t\tlet polygonArray = [];\n\t\tlet myMarkers = [];\n\t\tdrawingManager.addListener(\"polygoncomplete\", function(polygon) {\n\t\t\t//add a listener to the polygon so we can do things to it.\n\t\t\t//\n\t\t\tgoogle.maps.event.addListener(polygon, \"click\", function(event) {\n\t\t\t\tconsole.log(polygon);\n\t\t\t\t//remove polygon on click\n\t\t\t\tpolygon.setMap(map);\n\t\t\t});\n\n\t\t\tvar coordinates = polygon.getPath().getArray();\n\t\t\tpolygonArray.push(polygon);\n\t\t\tif (polygonArray.length > 1) {\n\t\t\t\tconsole.log(\"changing previous polygon color\");\n\t\t\t\tpolygonArray[polygonArray.length - 2].fillColor = \"#ff00ff\";\n\t\t\t\tpolygonArray[polygonArray.length - 2].setMap(null);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tpolygonArray[polygonArray.length - 2].setMap(map);\n\t\t\t\t}, 10);\n\t\t\t}\n\t\t\tconsole.log(\"the polygon array includes: \", polygonArray);\n\n\t\t\t// console.log(coordinates);\n\t\t\tconsole.info(\"The coordinates that make up the polygon are\");\n\t\t\t//log each set up lat long for the polygon\n\t\t\tvar dimensionsString = \"<br>DIMENSIONS: <br>\";\n\t\t\tif (coordinates.length > 1) {\n\t\t\t\tcoordinates.forEach(function(coord, index) {\n\t\t\t\t\tconsole.log(coord.lat(), coord.lng(), index);\n\n\t\t\t\t\tif (index < coordinates.length - 1) {\n\t\t\t\t\t\tlet distance = distanceInKmBetweenEarthCoordinates(\n\t\t\t\t\t\t\tcoordinates[index].lat(),\n\t\t\t\t\t\t\tcoordinates[index].lng(),\n\t\t\t\t\t\t\tcoordinates[index + 1].lat(),\n\t\t\t\t\t\t\tcoordinates[index + 1].lng()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdimensionsString =\n\t\t\t\t\t\t\tdimensionsString +\n\t\t\t\t\t\t\t(distance * 1000 * 3.2808).toFixed(2) +\n\t\t\t\t\t\t\t\" feet  <br> by \";\n\t\t\t\t\t\tconsole.log(distance.toFixed(4), \"km in length\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet distance = distanceInKmBetweenEarthCoordinates(\n\t\t\t\t\t\t\tcoordinates[index].lat(),\n\t\t\t\t\t\t\tcoordinates[index].lng(),\n\t\t\t\t\t\t\tcoordinates[0].lat(),\n\t\t\t\t\t\t\tcoordinates[0].lng()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdimensionsString =\n\t\t\t\t\t\t\tdimensionsString +\n\t\t\t\t\t\t\t(distance * 1000 * 3.2808).toFixed(2) +\n\t\t\t\t\t\t\t\" feet\";\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tconsole.log(\"dimensionsString \", dimensionsString);\n\n\t\t\t//grab and attach value in square feet to the input box with id sqfeet\n\t\t\tvar sqFeet =\n\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath()) * 10.7639;\n\t\t\tdocument.getElementById(\"sqfeet\").value =\n\t\t\t\tsqFeet.toFixed(3) + \" Square Feet\";\n\t\t\t//log area in square meters\n\t\t\tconsole.log(\n\t\t\t\t\"Its area in square meters\",\n\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t);\n\t\t\tconsole.log(sqFeet, \" is the square feet.\");\n\n\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\tposition: coordinates[0],\n\t\t\t\tmap: map,\n\t\t\t\ttitle: \"Dimensions\"\n\t\t\t});\n\t\t\tmyMarkers.push(marker);\n\t\t\tconsole.log(\"markers\", myMarkers);\n\t\t\tmarker.setMap(map);\n\t\t\tsetTimeout(function() {\n\t\t\t\tmarker.setMap(null);\n\t\t\t}, 2000);\n\n\t\t\t//create a marker at the point of the first coordinate of each polygon created.\n\t\t\t// google.maps.Marker({\n\t\t\t// \tposition: coordinates[0],\n\t\t\t// \tmap: Map,\n\t\t\t// \ttitle:\n\t\t\t// \t\tMath.round(\n\t\t\t// \t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t// \t\t) *\n\t\t\t// \t\t\t10.7639 +\n\t\t\t// \t\t\" Square Feet\"\n\t\t\t// });\n\t\t\t//Create a popup window and then add a click listener to open the popup on click or hover\n\t\t\tvar infowindow = new google.maps.InfoWindow({\n\t\t\t\tcontent:\n\t\t\t\t\t\"SQUARE FEET:<br>\" +\n\t\t\t\t\t(\n\t\t\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath()) *\n\t\t\t\t\t\t10.7639\n\t\t\t\t\t).toFixed() +\n\t\t\t\t\tdimensionsString\n\t\t\t});\n\n\t\t\tmarker.addListener(\"click\", function() {\n\t\t\t\tinfowindow.open(Map, marker);\n\t\t\t});\n\t\t\tpolygon.addListener(\"mouseover\", function() {\n\t\t\t\tconsole.log(\"hovering\");\n\t\t\t\tmarker.setMap(map);\n\t\t\t\tinfowindow.open(Map, marker);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tinfowindow.close();\n\t\t\t\t}, 3000);\n\t\t\t});\n\t\t\tinfowindow.open(Map, marker);\n\t\t});\n\n\t\t/*events and listeners and blah blah*/\n\n\t\tdrawingManager.polygonOptions.fillColor = \"#00FF00\";\n\n\t\tvar legal = document.getElementById(\"isLegal\");\n\t\tlegal.addEventListener(\"click\", function() {\n\t\t\tconsole.log(\"inside init and islegal is clicked.\");\n\t\t\tdrawingManager.polygonOptions.fillColor = \"#00FF00\";\n\t\t});\n\t\tvar prohibited = document.getElementById(\"isProhibited\");\n\t\tprohibited.addEventListener(\"click\", function() {\n\t\t\tconsole.log(\"inside init and prohibited is clicked.\");\n\t\t\tdrawingManager.polygonOptions.fillColor = \"#ff0000\";\n\t\t});\n\n\t\tvar degreesToRadians = function(degrees) {\n\t\t\treturn (degrees * Math.PI) / 180;\n\t\t};\n\t\tvar distanceInKmBetweenEarthCoordinates = function(lat1, lon1, lat2, lon2) {\n\t\t\tvar earthRadiusKm = 6371;\n\n\t\t\tvar dLat = degreesToRadians(lat2 - lat1);\n\t\t\tvar dLon = degreesToRadians(lon2 - lon1);\n\n\t\t\tlat1 = degreesToRadians(lat1);\n\t\t\tlat2 = degreesToRadians(lat2);\n\n\t\t\tvar a =\n\t\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\t\tMath.sin(dLon / 2) *\n\t\t\t\t\tMath.sin(dLon / 2) *\n\t\t\t\t\tMath.cos(lat1) *\n\t\t\t\t\tMath.cos(lat2);\n\t\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\t\treturn earthRadiusKm * c;\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Square Feet</h2>\n\t\t\t\t\t\t<input type=\"text\" id=\"sqfeet\" placeholder=\"value goes here\" />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2>Mark Legal or Prohibited</h2>\n\n\t\t\t\t\t<div id=\"legals\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"legal\"\n\t\t\t\t\t\t\tvalue=\"legal\"\n\t\t\t\t\t\t\tid=\"isLegal\"\n\t\t\t\t\t\t\t// onClick={this.clickLegalHandler}\n\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\tLegal\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"legal\"\n\t\t\t\t\t\t\tvalue=\"prohibited\"\n\t\t\t\t\t\t\tid=\"isProhibited\"\n\t\t\t\t\t\t\t// onClick={this.clickProhibitedHandler}\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\tProhibited\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<div id=\"\">\n\t\t\t\t\t<label style={{ color: \"green\", fontSize: \"20pt\" }}>Search Bar</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ border: \"solid green 6px\" }}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"searchWindow\"\n\t\t\t\t\t\tplaceholder=\"search for a city\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Map\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"80%\",\n\t\t\t\t\t\theight: \"80%\",\n\t\t\t\t\t\tmarginLeft: \"10%\",\n\t\t\t\t\t\tborder: \"solid green 8px\"\n\t\t\t\t\t}}\n\t\t\t\t\tgoogle={window.google}\n\t\t\t\t\tonReady={this.initMap}\n\t\t\t\t\tonClick={this.onMapClicked}\n\t\t\t\t\tinitialCenter={{ lat: 47.6062, lng: -122.3321 }}\n\t\t\t\t\tzoom={15}\n\t\t\t\t\tscaleControl\n\t\t\t\t\teMapApiInternals>\n\t\t\t\t\t{/* <Marker\n\t\t\t\t\t\ttitle={\"The marker`s title will appear as a tooltip.\"}\n\t\t\t\t\t\tname={\"Downtown\"}\n\t\t\t\t\t\tposition={{ lat: 47.60629, lng: -122.3321 }}\n\t\t\t\t\t/> */}\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: GOOGLE_API_KEY,\n\tlibraries: [\"drawing\", \"places\"]\n})(DrawingMap);\n","const GOOGLE_API_KEY = \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\";\nexport default GOOGLE_API_KEY;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MapPage from \"./Components/mapPage\";\nimport GoogleApiWrapper from \"./Components/mapPage\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>This is the app.js page</h1>\n\t\t\t\t<MapPage />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}