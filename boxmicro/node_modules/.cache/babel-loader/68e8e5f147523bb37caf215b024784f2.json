{"ast":null,"code":"import _classCallCheck from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/src/Components/mapPage.js\";\nimport React from \"react\";\nimport { Map, InfoWindow, GoogleApiWrapper, Polygon, Marker } from \"google-maps-react\";\n\nvar DrawingMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DrawingMap, _React$Component);\n\n  function DrawingMap(props) {\n    var _this;\n\n    _classCallCheck(this, DrawingMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DrawingMap).call(this, props)); // this.initMap = this.initMap.bind(this);\n    // console.log(Polygon);\n\n    _this.fillColor = \"#32CD32\";\n    _this.drawingManager = {};\n\n    _this.clickLegalHandler = function () {\n      console.log(\"clicked for legal\");\n      drawingManager.polygonOptions.fillColor = \"#32CD32\";\n    };\n\n    _this.clickProhibitedHandler = function () {\n      console.log(\"clicked for prohibited\"); // this.drawingManager.polygonOptions.fillColor = \"#aaaaaa\";\n    };\n\n    _this.markerProps = {}; // this.fillColor = \"#32CD32\";\n\n    console.log(\"fill color is\", _this.fillColor);\n\n    _this.initMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(DrawingMap, [{\n    key: \"initMap\",\n    value: function initMap(mapProps, map) {\n      console.log(\"inside initMap\", this.fillColor);\n      var google = mapProps.google;\n      this.drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [// google.maps.drawing.OverlayType.MARKER,\n          google.maps.drawing.OverlayType.POLYGON]\n        },\n        markerOptions: {\n          icon: \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\n        },\n        polygonOptions: {\n          fillColor: this.fillColor\n        },\n        map: map\n      });\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON); // drawingManager.polygonOptions.fillColor = this.fillColor;\n      //polygon testing\n\n      drawingManager.addListener(\"polygoncomplete\", function (polygon) {\n        var coordinates = polygon.getPath().getArray();\n        console.info(\"The coordinates that make up the polygon are\"); //log each set up lat long for the polygon\n\n        coordinates.forEach(function (coord) {\n          console.log(coord.lat(), coord.lng());\n        }); //grab and attach value in square feet to the input box with id sqfeet\n\n        document.getElementById(\"sqfeet\").value = Math.round(google.maps.geometry.spherical.computeArea(polygon.getPath()) * 10.7639) + \" Square Feet\"; //log area in square meters\n\n        console.log(\"Its area in square meters\", google.maps.geometry.spherical.computeArea(polygon.getPath())); //create a marker at the point of the first coordinate of each polygon created.\n        //  Marker = new google.maps.Marker({\n        // \tposition: coordinates[0],\n        // \tmap: Map,\n        // \ttitle:\n        // \t\tMath.round(\n        // \t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n        // \t\t) *\n        // \t\t\t10.7639 +\n        // \t\t\" Square Feet\"\n        // });\n        //Create a popup window and then add a click listener to open the popup on click or hover\n\n        var infowindow = new google.maps.InfoWindow({\n          content: Math.round(google.maps.geometry.spherical.computeArea(polygon.getPath())) * 10.7639 + \" Square Feet\"\n        }); // Marker.addListener(\"click\", function() {\n        // \tinfowindow.open(Map, Marker);\n        // });\n        // Marker.addListener(\"mouseover\", function() {\n        // \tinfowindow.open(Map, Marker);\n        // \tsetTimeout(function() {\n        // \t\tinfowindow.close();\n        // \t}, 1000);\n        // });\n      });\n      /*events and listeners and blah blah*/\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Square Feet\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"sqfeet\",\n        placeholder: \"value goes here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Mark Legal or Prohibited\"), React.createElement(\"div\", {\n        id: \"legals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"legal\",\n        value: \"legal\",\n        id: \"isLegal\",\n        onClick: this.clickLegalHandler,\n        defaultChecked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \" \", \"Legal\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"legal\",\n        value: \"prohibited\",\n        id: \"isProhibited\",\n        onClick: this.clickProhibitedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), \" \", \"Prohibited\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Map, {\n        google: window.google,\n        onReady: this.initMap,\n        onClick: this.onMapClicked,\n        initialCenter: {\n          lat: 47.6062,\n          lng: -122.3321\n        },\n        zoom: 15,\n        eMapApiInternals: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        title: \"The marker`s title will appear as a tooltip.\",\n        name: \"Downtown\",\n        position: {\n          lat: 47.60629,\n          lng: -122.3321\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DrawingMap;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\",\n  libraries: [\"drawing\"]\n})(DrawingMap); // AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4","map":{"version":3,"sources":["/Users/gaston/Documents/BoxMicro/bm2/boxmicro/src/Components/mapPage.js"],"names":["React","Map","InfoWindow","GoogleApiWrapper","Polygon","Marker","DrawingMap","props","fillColor","drawingManager","clickLegalHandler","console","log","polygonOptions","clickProhibitedHandler","markerProps","initMap","bind","mapProps","map","google","maps","drawing","DrawingManager","drawingMode","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","OverlayType","POLYGON","markerOptions","icon","setDrawingMode","addListener","polygon","coordinates","getPath","getArray","info","forEach","coord","lat","lng","document","getElementById","value","Math","round","geometry","spherical","computeArea","infowindow","content","window","onMapClicked","Component","apiKey","libraries"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n\tMap,\n\tInfoWindow,\n\tGoogleApiWrapper,\n\tPolygon,\n\tMarker\n} from \"google-maps-react\";\n\nclass DrawingMap extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// this.initMap = this.initMap.bind(this);\n\t\t// console.log(Polygon);\n\t\tthis.markerProps = {};\n\n\t\t// this.fillColor = \"#32CD32\";\n\n\t\tconsole.log(\"fill color is\", this.fillColor);\n\t\tthis.initMap.bind(this);\n\t}\n\tfillColor = \"#32CD32\";\n\tdrawingManager = {};\n\tinitMap(mapProps, map) {\n\t\tconsole.log(\"inside initMap\", this.fillColor);\n\t\tconst { google } = mapProps;\n\n\t\tthis.drawingManager = new google.maps.drawing.DrawingManager({\n\t\t\tdrawingMode: null,\n\t\t\tdrawingControl: true,\n\t\t\tdrawingControlOptions: {\n\t\t\t\tposition: google.maps.ControlPosition.TOP_CENTER,\n\t\t\t\tdrawingModes: [\n\t\t\t\t\t// google.maps.drawing.OverlayType.MARKER,\n\t\t\t\t\tgoogle.maps.drawing.OverlayType.POLYGON\n\t\t\t\t]\n\t\t\t},\n\t\t\tmarkerOptions: {\n\t\t\t\ticon:\n\t\t\t\t\t\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\n\t\t\t},\n\t\t\tpolygonOptions: {\n\t\t\t\tfillColor: this.fillColor\n\t\t\t},\n\t\t\tmap: map\n\t\t});\n\t\tthis.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n\t\t// drawingManager.polygonOptions.fillColor = this.fillColor;\n\n\t\t//polygon testing\n\n\t\tdrawingManager.addListener(\"polygoncomplete\", function(polygon) {\n\t\t\tvar coordinates = polygon.getPath().getArray();\n\t\t\tconsole.info(\"The coordinates that make up the polygon are\");\n\t\t\t//log each set up lat long for the polygon\n\t\t\tcoordinates.forEach(function(coord) {\n\t\t\t\tconsole.log(coord.lat(), coord.lng());\n\t\t\t});\n\t\t\t//grab and attach value in square feet to the input box with id sqfeet\n\t\t\tdocument.getElementById(\"sqfeet\").value =\n\t\t\t\tMath.round(\n\t\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath()) *\n\t\t\t\t\t\t10.7639\n\t\t\t\t) + \" Square Feet\";\n\t\t\t//log area in square meters\n\t\t\tconsole.log(\n\t\t\t\t\"Its area in square meters\",\n\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t);\n\t\t\t//create a marker at the point of the first coordinate of each polygon created.\n\t\t\t//  Marker = new google.maps.Marker({\n\t\t\t// \tposition: coordinates[0],\n\t\t\t// \tmap: Map,\n\t\t\t// \ttitle:\n\t\t\t// \t\tMath.round(\n\t\t\t// \t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t// \t\t) *\n\t\t\t// \t\t\t10.7639 +\n\t\t\t// \t\t\" Square Feet\"\n\t\t\t// });\n\t\t\t//Create a popup window and then add a click listener to open the popup on click or hover\n\t\t\tvar infowindow = new google.maps.InfoWindow({\n\t\t\t\tcontent:\n\t\t\t\t\tMath.round(\n\t\t\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t\t\t) *\n\t\t\t\t\t\t10.7639 +\n\t\t\t\t\t\" Square Feet\"\n\t\t\t});\n\t\t\t// Marker.addListener(\"click\", function() {\n\t\t\t// \tinfowindow.open(Map, Marker);\n\t\t\t// });\n\t\t\t// Marker.addListener(\"mouseover\", function() {\n\t\t\t// \tinfowindow.open(Map, Marker);\n\t\t\t// \tsetTimeout(function() {\n\t\t\t// \t\tinfowindow.close();\n\t\t\t// \t}, 1000);\n\t\t\t// });\n\t\t});\n\n\t\t/*events and listeners and blah blah*/\n\t}\n\n\tclickLegalHandler = () => {\n\t\tconsole.log(\"clicked for legal\");\n\t\tdrawingManager.polygonOptions.fillColor = \"#32CD32\";\n\t};\n\tclickProhibitedHandler = () => {\n\t\tconsole.log(\"clicked for prohibited\");\n\t\t// this.drawingManager.polygonOptions.fillColor = \"#aaaaaa\";\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Square Feet</h2>\n\t\t\t\t\t\t<input type=\"text\" id=\"sqfeet\" placeholder=\"value goes here\" />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2>Mark Legal or Prohibited</h2>\n\n\t\t\t\t\t<div id=\"legals\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"legal\"\n\t\t\t\t\t\t\tvalue=\"legal\"\n\t\t\t\t\t\t\tid=\"isLegal\"\n\t\t\t\t\t\t\tonClick={this.clickLegalHandler}\n\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\tLegal\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"legal\"\n\t\t\t\t\t\t\tvalue=\"prohibited\"\n\t\t\t\t\t\t\tid=\"isProhibited\"\n\t\t\t\t\t\t\tonClick={this.clickProhibitedHandler}\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\tProhibited\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\n\t\t\t\t<Map\n\t\t\t\t\tgoogle={window.google}\n\t\t\t\t\tonReady={this.initMap}\n\t\t\t\t\tonClick={this.onMapClicked}\n\t\t\t\t\tinitialCenter={{ lat: 47.6062, lng: -122.3321 }}\n\t\t\t\t\tzoom={15}\n\t\t\t\t\teMapApiInternals>\n\t\t\t\t\t<Marker\n\t\t\t\t\t\ttitle={\"The marker`s title will appear as a tooltip.\"}\n\t\t\t\t\t\tname={\"Downtown\"}\n\t\t\t\t\t\tposition={{ lat: 47.60629, lng: -122.3321 }}\n\t\t\t\t\t/>\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\",\n\tlibraries: [\"drawing\"]\n})(DrawingMap);\n\n// AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\n"]},"metadata":{},"sourceType":"module"}