{"ast":null,"code":"import _classCallCheck from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/src/Components/mapPage.js\";\nimport React from \"react\";\nimport { Map, InfoWindow, GoogleApiWrapper, Polygon } from \"google-maps-react\";\n\nvar DrawingMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DrawingMap, _React$Component);\n\n  function DrawingMap(props) {\n    var _this;\n\n    _classCallCheck(this, DrawingMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DrawingMap).call(this, props));\n    _this.initMap = _this.initMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(Polygon);\n    return _this;\n  }\n\n  _createClass(DrawingMap, [{\n    key: \"initMap\",\n    value: function initMap(mapProps, map) {\n      var google = mapProps.google;\n      var drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [// google.maps.drawing.OverlayType.MARKER,\n          google.maps.drawing.OverlayType.POLYGON]\n        },\n        markerOptions: {\n          icon: \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\n        },\n        polygonOptions: {\n          fillColor: \"#00FF00\"\n        },\n        map: map\n      });\n      drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON); //polygon testing\n\n      drawingManager.addListener(\"polygoncomplete\", function (polygon) {\n        var coordinates = polygon.getPath().getArray();\n        console.info(\"The coordinates that make up the polygon are\"); //log each set up lat long for the polygon\n\n        coordinates.forEach(function (coord) {\n          console.log(coord.lat(), coord.lng());\n        }); //grab and attach value in square feet to the input box with id sqfeet\n\n        document.getElementById(\"sqfeet\").value = Math.round(google.maps.geometry.spherical.computeArea(polygon.getPath()) * 10.7639) + \" Square Feet\"; //log area in square meters\n\n        console.log(\"Its area in square meters\", google.maps.geometry.spherical.computeArea(polygon.getPath())); //create a marker at the point of the first coordinate of each polygon created.\n\n        var marker = new google.maps.Marker({\n          position: coordinates[0],\n          map: map,\n          title: Math.round(google.maps.geometry.spherical.computeArea(polygon.getPath())) * 10.7639 + \" Square Feet\"\n        });\n        /*events and listeners and blah blah*/\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Map, {\n        google: window.google,\n        onReady: this.initMap,\n        onClick: this.onMapClicked,\n        initialCenter: {\n          lat: 47.6062,\n          lng: -122.3321\n        },\n        zoom: 15,\n        eMapApiInternals: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DrawingMap;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\",\n  libraries: [\"drawing\"]\n})(DrawingMap); // AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4","map":{"version":3,"sources":["/Users/gaston/Documents/BoxMicro/bm2/boxmicro/src/Components/mapPage.js"],"names":["React","Map","InfoWindow","GoogleApiWrapper","Polygon","DrawingMap","props","initMap","bind","console","log","mapProps","map","google","drawingManager","maps","drawing","DrawingManager","drawingMode","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","OverlayType","POLYGON","markerOptions","icon","polygonOptions","fillColor","setDrawingMode","addListener","polygon","coordinates","getPath","getArray","info","forEach","coord","lat","lng","document","getElementById","value","Math","round","geometry","spherical","computeArea","marker","Marker","title","window","onMapClicked","Component","apiKey","libraries"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,gBAA1B,EAA4CC,OAA5C,QAA2D,mBAA3D;;IAEMC,U;;;;;AACL,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,oFAAMA,KAAN;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAHkB;AAIlB;;;;4BAEOO,Q,EAAUC,G,EAAK;AAAA,UACdC,MADc,GACHF,QADG,CACdE,MADc;AAGtB,UAAMC,cAAc,GAAG,IAAID,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBC,cAAxB,CAAuC;AAC7DC,QAAAA,WAAW,EAAE,IADgD;AAE7DC,QAAAA,cAAc,EAAE,IAF6C;AAG7DC,QAAAA,qBAAqB,EAAE;AACtBC,UAAAA,QAAQ,EAAER,MAAM,CAACE,IAAP,CAAYO,eAAZ,CAA4BC,UADhB;AAEtBC,UAAAA,YAAY,EAAE,CACb;AACAX,UAAAA,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBS,WAApB,CAAgCC,OAFnB;AAFQ,SAHsC;AAU7DC,QAAAA,aAAa,EAAE;AACdC,UAAAA,IAAI,EACH;AAFa,SAV8C;AAc7DC,QAAAA,cAAc,EAAE;AACfC,UAAAA,SAAS,EAAE;AADI,SAd6C;AAiB7DlB,QAAAA,GAAG,EAAEA;AAjBwD,OAAvC,CAAvB;AAmBAE,MAAAA,cAAc,CAACiB,cAAf,CAA8BlB,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBS,WAApB,CAAgCC,OAA9D,EAtBsB,CAwBtB;;AACAZ,MAAAA,cAAc,CAACkB,WAAf,CAA2B,iBAA3B,EAA8C,UAASC,OAAT,EAAkB;AAC/D,YAAIC,WAAW,GAAGD,OAAO,CAACE,OAAR,GAAkBC,QAAlB,EAAlB;AACA3B,QAAAA,OAAO,CAAC4B,IAAR,CAAa,8CAAb,EAF+D,CAG/D;;AACAH,QAAAA,WAAW,CAACI,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AACnC9B,UAAAA,OAAO,CAACC,GAAR,CAAY6B,KAAK,CAACC,GAAN,EAAZ,EAAyBD,KAAK,CAACE,GAAN,EAAzB;AACA,SAFD,EAJ+D,CAO/D;;AACAC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,GACCC,IAAI,CAACC,KAAL,CACCjC,MAAM,CAACE,IAAP,CAAYgC,QAAZ,CAAqBC,SAArB,CAA+BC,WAA/B,CAA2ChB,OAAO,CAACE,OAAR,EAA3C,IACC,OAFF,IAGI,cAJL,CAR+D,CAa/D;;AACA1B,QAAAA,OAAO,CAACC,GAAR,CACC,2BADD,EAECG,MAAM,CAACE,IAAP,CAAYgC,QAAZ,CAAqBC,SAArB,CAA+BC,WAA/B,CAA2ChB,OAAO,CAACE,OAAR,EAA3C,CAFD,EAd+D,CAkB/D;;AACA,YAAIe,MAAM,GAAG,IAAIrC,MAAM,CAACE,IAAP,CAAYoC,MAAhB,CAAuB;AACnC9B,UAAAA,QAAQ,EAAEa,WAAW,CAAC,CAAD,CADc;AAEnCtB,UAAAA,GAAG,EAAEA,GAF8B;AAGnCwC,UAAAA,KAAK,EACJP,IAAI,CAACC,KAAL,CACCjC,MAAM,CAACE,IAAP,CAAYgC,QAAZ,CAAqBC,SAArB,CAA+BC,WAA/B,CAA2ChB,OAAO,CAACE,OAAR,EAA3C,CADD,IAGC,OAHD,GAIA;AARkC,SAAvB,CAAb;AAWA;AACA,OA/BD;AAgCA;;;6BAEQ;AACR,aACC,oBAAC,GAAD;AACC,QAAA,MAAM,EAAEkB,MAAM,CAACxC,MADhB;AAEC,QAAA,OAAO,EAAE,KAAKN,OAFf;AAGC,QAAA,OAAO,EAAE,KAAK+C,YAHf;AAIC,QAAA,aAAa,EAAE;AAAEd,UAAAA,GAAG,EAAE,OAAP;AAAgBC,UAAAA,GAAG,EAAE,CAAC;AAAtB,SAJhB;AAKC,QAAA,IAAI,EAAE,EALP;AAMC,QAAA,gBAAgB,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAUA;;;;EA7EuBzC,KAAK,CAACuD,S;;AAgF/B,eAAepD,gBAAgB,CAAC;AAC/BqD,EAAAA,MAAM,EAAE,yCADuB;AAE/BC,EAAAA,SAAS,EAAE,CAAC,SAAD;AAFoB,CAAD,CAAhB,CAGZpD,UAHY,CAAf,C,CAKA","sourcesContent":["import React from \"react\";\nimport { Map, InfoWindow, GoogleApiWrapper, Polygon } from \"google-maps-react\";\n\nclass DrawingMap extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.initMap = this.initMap.bind(this);\n\t\tconsole.log(Polygon);\n\t}\n\n\tinitMap(mapProps, map) {\n\t\tconst { google } = mapProps;\n\n\t\tconst drawingManager = new google.maps.drawing.DrawingManager({\n\t\t\tdrawingMode: null,\n\t\t\tdrawingControl: true,\n\t\t\tdrawingControlOptions: {\n\t\t\t\tposition: google.maps.ControlPosition.TOP_CENTER,\n\t\t\t\tdrawingModes: [\n\t\t\t\t\t// google.maps.drawing.OverlayType.MARKER,\n\t\t\t\t\tgoogle.maps.drawing.OverlayType.POLYGON\n\t\t\t\t]\n\t\t\t},\n\t\t\tmarkerOptions: {\n\t\t\t\ticon:\n\t\t\t\t\t\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\n\t\t\t},\n\t\t\tpolygonOptions: {\n\t\t\t\tfillColor: \"#00FF00\"\n\t\t\t},\n\t\t\tmap: map\n\t\t});\n\t\tdrawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n\n\t\t//polygon testing\n\t\tdrawingManager.addListener(\"polygoncomplete\", function(polygon) {\n\t\t\tvar coordinates = polygon.getPath().getArray();\n\t\t\tconsole.info(\"The coordinates that make up the polygon are\");\n\t\t\t//log each set up lat long for the polygon\n\t\t\tcoordinates.forEach(function(coord) {\n\t\t\t\tconsole.log(coord.lat(), coord.lng());\n\t\t\t});\n\t\t\t//grab and attach value in square feet to the input box with id sqfeet\n\t\t\tdocument.getElementById(\"sqfeet\").value =\n\t\t\t\tMath.round(\n\t\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath()) *\n\t\t\t\t\t\t10.7639\n\t\t\t\t) + \" Square Feet\";\n\t\t\t//log area in square meters\n\t\t\tconsole.log(\n\t\t\t\t\"Its area in square meters\",\n\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t);\n\t\t\t//create a marker at the point of the first coordinate of each polygon created.\n\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\tposition: coordinates[0],\n\t\t\t\tmap: map,\n\t\t\t\ttitle:\n\t\t\t\t\tMath.round(\n\t\t\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t\t\t) *\n\t\t\t\t\t\t10.7639 +\n\t\t\t\t\t\" Square Feet\"\n\t\t\t});\n\n\t\t\t/*events and listeners and blah blah*/\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Map\n\t\t\t\tgoogle={window.google}\n\t\t\t\tonReady={this.initMap}\n\t\t\t\tonClick={this.onMapClicked}\n\t\t\t\tinitialCenter={{ lat: 47.6062, lng: -122.3321 }}\n\t\t\t\tzoom={15}\n\t\t\t\teMapApiInternals\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\",\n\tlibraries: [\"drawing\"]\n})(DrawingMap);\n\n// AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\n"]},"metadata":{},"sourceType":"module"}