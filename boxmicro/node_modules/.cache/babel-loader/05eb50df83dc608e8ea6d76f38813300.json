{"ast":null,"code":"import _classCallCheck from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gaston/Documents/BoxMicro/bm2/boxmicro/src/Components/mapPage.js\";\nimport React from \"react\";\nimport { Map, InfoWindow, GoogleApiWrapper, Polygon, Marker, Places, SearchBox } from \"google-maps-react\";\n\nvar DrawingMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DrawingMap, _React$Component);\n\n  function DrawingMap(props) {\n    var _this;\n\n    _classCallCheck(this, DrawingMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DrawingMap).call(this, props));\n    _this.markerProps = {};\n    _this.initMap = _this.initMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DrawingMap, [{\n    key: \"initMap\",\n    value: function initMap(mapProps, map) {\n      var google = mapProps.google;\n      var drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [// google.maps.drawing.OverlayType.MARKER,\n          google.maps.drawing.OverlayType.POLYGON]\n        },\n        markerOptions: {\n          icon: \"https://developers.google.com/maps/documentation/javascript/examples/full/images/parking.png\"\n        },\n        polygonOptions: {\n          fillColor: \"#00FF0\"\n        },\n        map: map\n      });\n      drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON); //search bar\n      // Create the search box and link it to the UI element.\n\n      var input = document.getElementById(\"searchWindow\");\n      var searchBox = new google.maps.places.SearchBox(input);\n      map.controls[google.maps.ControlPosition.TOP_CENTER].push(input); // Bias the SearchBox results towards current map's viewport.\n\n      map.addListener(\"bounds_changed\", function () {\n        console.log(\"bounds changed\");\n        searchBox.setBounds(map.getBounds());\n      }); // Listen for the event fired when the user selects a prediction and retrieve\n      // more details for that place.\n\n      console.log(\"searchBox is \", searchBox);\n      var markers = [];\n      searchBox.addListener(\"places_changed\", function () {\n        console.log(\"places changed.\");\n        var places = searchBox.getPlaces();\n\n        if (places.length == 0) {\n          return;\n        } // Clear out the old markers.\n\n\n        markers.forEach(function (marker) {\n          marker.setMap(null);\n        });\n        markers = []; // For each place, get the icon, name and location.\n\n        var bounds = new google.maps.LatLngBounds();\n        places.forEach(function (place) {\n          if (!place.geometry) {\n            console.log(\"Returned place contains no geometry\");\n            return;\n          }\n\n          var icon = {\n            url: place.icon,\n            size: new google.maps.Size(71, 71),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(17, 34),\n            scaledSize: new google.maps.Size(25, 25)\n          }; // Create a marker for each place.\n\n          markers.push(new google.maps.Marker({\n            map: map,\n            icon: icon,\n            title: place.name,\n            position: place.geometry.location\n          }));\n\n          if (place.geometry.viewport) {\n            // Only geocodes have viewport.\n            bounds.union(place.geometry.viewport);\n          } else {\n            bounds.extend(place.geometry.location);\n          }\n        }); // map.fitBounds(bounds);\n      }); //polygon testing\n\n      var polygonArray = [];\n      var myMarkers = [];\n      drawingManager.addListener(\"polygoncomplete\", function (polygon) {\n        //add a listener to the polygon so we can do things to it.\n        //\n        google.maps.event.addListener(polygon, \"click\", function (event) {\n          console.log(polygon); //remove polygon on click\n\n          polygon.setMap(null);\n        });\n        var coordinates = polygon.getPath().getArray();\n        polygonArray.push(polygon);\n\n        if (polygonArray.length > 1) {\n          console.log(\"changing previous polygon color\");\n          polygonArray[polygonArray.length - 2].fillColor = \"#ff00ff\";\n          polygonArray[polygonArray.length - 2].setMap(null);\n          setTimeout(function () {\n            polygonArray[polygonArray.length - 2].setMap(map);\n          }, 10);\n        }\n\n        console.log(\"the polygon array includes: \", polygonArray); // console.log(coordinates);\n\n        console.info(\"The coordinates that make up the polygon are\"); //log each set up lat long for the polygon\n\n        var dimensionsString = \"<br>DIMENSIONS: <br>\";\n\n        if (coordinates.length > 1) {\n          coordinates.forEach(function (coord, index) {\n            console.log(coord.lat(), coord.lng(), index);\n\n            if (index < coordinates.length - 1) {\n              var distance = distanceInKmBetweenEarthCoordinates(coordinates[index].lat(), coordinates[index].lng(), coordinates[index + 1].lat(), coordinates[index + 1].lng());\n              dimensionsString = dimensionsString + (distance * 1000 * 3.2808).toFixed(2) + \" feet  <br> by \";\n              console.log(distance.toFixed(4), \"km in length\");\n            } else {\n              var _distance = distanceInKmBetweenEarthCoordinates(coordinates[index].lat(), coordinates[index].lng(), coordinates[0].lat(), coordinates[0].lng());\n\n              dimensionsString = dimensionsString + (_distance * 1000 * 3.2808).toFixed(2) + \" feet\";\n            }\n          });\n        }\n\n        console.log(\"dimensionsString \", dimensionsString); //grab and attach value in square feet to the input box with id sqfeet\n\n        var sqFeet = google.maps.geometry.spherical.computeArea(polygon.getPath()) * 10.7639;\n        document.getElementById(\"sqfeet\").value = sqFeet.toFixed(3) + \" Square Feet\"; //log area in square meters\n\n        console.log(\"Its area in square meters\", google.maps.geometry.spherical.computeArea(polygon.getPath()));\n        console.log(sqFeet, \" is the square feet.\");\n        var marker = new google.maps.Marker({\n          position: coordinates[0],\n          map: map,\n          title: \"Dimensions\"\n        });\n        myMarkers.push(marker);\n        console.log(\"markers\", myMarkers);\n        marker.setMap(map);\n        setTimeout(function () {\n          marker.setMap(null);\n        }, 2000); //create a marker at the point of the first coordinate of each polygon created.\n        // google.maps.Marker({\n        // \tposition: coordinates[0],\n        // \tmap: Map,\n        // \ttitle:\n        // \t\tMath.round(\n        // \t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n        // \t\t) *\n        // \t\t\t10.7639 +\n        // \t\t\" Square Feet\"\n        // });\n        //Create a popup window and then add a click listener to open the popup on click or hover\n\n        var infowindow = new google.maps.InfoWindow({\n          content: \"SQUARE FEET:<br>\" + (google.maps.geometry.spherical.computeArea(polygon.getPath()) * 10.7639).toFixed() + dimensionsString\n        });\n        marker.addListener(\"click\", function () {\n          infowindow.open(Map, marker);\n        });\n        marker.addListener(\"mouseover\", function () {\n          console.log(\"hovering\");\n          infowindow.open(Map, marker);\n          setTimeout(function () {\n            infowindow.close();\n          }, 3000);\n        });\n        infowindow.open(Map, marker);\n      });\n      /*events and listeners and blah blah*/\n\n      drawingManager.polygonOptions.fillColor = \"#00FF00\";\n      var legal = document.getElementById(\"isLegal\");\n      legal.addEventListener(\"click\", function () {\n        console.log(\"inside init and islegal is clicked.\");\n        drawingManager.polygonOptions.fillColor = \"#00FF00\";\n      });\n      var prohibited = document.getElementById(\"isProhibited\");\n      prohibited.addEventListener(\"click\", function () {\n        console.log(\"inside init and prohibited is clicked.\");\n        drawingManager.polygonOptions.fillColor = \"#ff0000\";\n      });\n\n      var degreesToRadians = function degreesToRadians(degrees) {\n        return degrees * Math.PI / 180;\n      };\n\n      var distanceInKmBetweenEarthCoordinates = function distanceInKmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\n        var earthRadiusKm = 6371;\n        var dLat = degreesToRadians(lat2 - lat1);\n        var dLon = degreesToRadians(lon2 - lon1);\n        lat1 = degreesToRadians(lat1);\n        lat2 = degreesToRadians(lat2);\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return earthRadiusKm * c;\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Square Feet\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"sqfeet\",\n        placeholder: \"value goes here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Mark Legal or Prohibited\"), React.createElement(\"div\", {\n        id: \"legals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"legal\",\n        value: \"legal\",\n        id: \"isLegal\" // onClick={this.clickLegalHandler}\n        ,\n        defaultChecked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), \" \", \"Legal\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"legal\",\n        value: \"prohibited\",\n        id: \"isProhibited\" // onClick={this.clickProhibitedHandler}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), \" \", \"Prohibited\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"searchWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Search Bar\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"\",\n        placeholder: \"search for a city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })), React.createElement(Map, {\n        style: {\n          width: \"90%\"\n        },\n        google: window.google,\n        onReady: this.initMap,\n        onClick: this.onMapClicked,\n        initialCenter: {\n          lat: 47.6062,\n          lng: -122.3321\n        },\n        zoom: 15,\n        scaleControl: true,\n        eMapApiInternals: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DrawingMap;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\",\n  libraries: [\"drawing\", \"places\"]\n})(DrawingMap); // AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4","map":{"version":3,"sources":["/Users/gaston/Documents/BoxMicro/bm2/boxmicro/src/Components/mapPage.js"],"names":["React","Map","InfoWindow","GoogleApiWrapper","Polygon","Marker","Places","SearchBox","DrawingMap","props","markerProps","initMap","bind","mapProps","map","google","drawingManager","maps","drawing","DrawingManager","drawingMode","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","OverlayType","POLYGON","markerOptions","icon","polygonOptions","fillColor","setDrawingMode","input","document","getElementById","searchBox","places","controls","push","addListener","console","log","setBounds","getBounds","markers","getPlaces","length","forEach","marker","setMap","bounds","LatLngBounds","place","geometry","url","size","Size","origin","Point","anchor","scaledSize","title","name","location","viewport","union","extend","polygonArray","myMarkers","polygon","event","coordinates","getPath","getArray","setTimeout","info","dimensionsString","coord","index","lat","lng","distance","distanceInKmBetweenEarthCoordinates","toFixed","sqFeet","spherical","computeArea","value","infowindow","content","open","close","legal","addEventListener","prohibited","degreesToRadians","degrees","Math","PI","lat1","lon1","lat2","lon2","earthRadiusKm","dLat","dLon","a","sin","cos","c","atan2","sqrt","width","window","onMapClicked","Component","apiKey","libraries"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n\tMap,\n\tInfoWindow,\n\tGoogleApiWrapper,\n\tPolygon,\n\tMarker,\n\tPlaces,\n\tSearchBox\n} from \"google-maps-react\";\n\nclass DrawingMap extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.markerProps = {};\n\n\t\tthis.initMap = this.initMap.bind(this);\n\t}\n\n\tinitMap(mapProps, map) {\n\t\tconst { google } = mapProps;\n\n\t\tconst drawingManager = new google.maps.drawing.DrawingManager({\n\t\t\tdrawingMode: null,\n\t\t\tdrawingControl: true,\n\t\t\tdrawingControlOptions: {\n\t\t\t\tposition: google.maps.ControlPosition.TOP_CENTER,\n\t\t\t\tdrawingModes: [\n\t\t\t\t\t// google.maps.drawing.OverlayType.MARKER,\n\t\t\t\t\tgoogle.maps.drawing.OverlayType.POLYGON\n\t\t\t\t]\n\t\t\t},\n\t\t\tmarkerOptions: {\n\t\t\t\ticon:\n\t\t\t\t\t\"https://developers.google.com/maps/documentation/javascript/examples/full/images/parking.png\"\n\t\t\t},\n\t\t\tpolygonOptions: {\n\t\t\t\tfillColor: \"#00FF0\"\n\t\t\t},\n\t\t\tmap: map\n\t\t});\n\t\tdrawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n\n\t\t//search bar\n\t\t// Create the search box and link it to the UI element.\n\t\tvar input = document.getElementById(\"searchWindow\");\n\t\tlet searchBox = new google.maps.places.SearchBox(input);\n\t\tmap.controls[google.maps.ControlPosition.TOP_CENTER].push(input);\n\n\t\t// Bias the SearchBox results towards current map's viewport.\n\t\tmap.addListener(\"bounds_changed\", function() {\n\t\t\tconsole.log(\"bounds changed\");\n\t\t\tsearchBox.setBounds(map.getBounds());\n\t\t});\n\n\t\t// Listen for the event fired when the user selects a prediction and retrieve\n\t\t// more details for that place.\n\n\t\tconsole.log(\"searchBox is \", searchBox);\n\n\t\tvar markers = [];\n\t\tsearchBox.addListener(\"places_changed\", function() {\n\t\t\tconsole.log(\"places changed.\");\n\t\t\tvar places = searchBox.getPlaces();\n\n\t\t\tif (places.length == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Clear out the old markers.\n\t\t\tmarkers.forEach(function(marker) {\n\t\t\t\tmarker.setMap(null);\n\t\t\t});\n\t\t\tmarkers = [];\n\n\t\t\t// For each place, get the icon, name and location.\n\t\t\tvar bounds = new google.maps.LatLngBounds();\n\t\t\tplaces.forEach(function(place) {\n\t\t\t\tif (!place.geometry) {\n\t\t\t\t\tconsole.log(\"Returned place contains no geometry\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar icon = {\n\t\t\t\t\turl: place.icon,\n\t\t\t\t\tsize: new google.maps.Size(71, 71),\n\t\t\t\t\torigin: new google.maps.Point(0, 0),\n\t\t\t\t\tanchor: new google.maps.Point(17, 34),\n\t\t\t\t\tscaledSize: new google.maps.Size(25, 25)\n\t\t\t\t};\n\n\t\t\t\t// Create a marker for each place.\n\t\t\t\tmarkers.push(\n\t\t\t\t\tnew google.maps.Marker({\n\t\t\t\t\t\tmap: map,\n\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\ttitle: place.name,\n\t\t\t\t\t\tposition: place.geometry.location\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tif (place.geometry.viewport) {\n\t\t\t\t\t// Only geocodes have viewport.\n\t\t\t\t\tbounds.union(place.geometry.viewport);\n\t\t\t\t} else {\n\t\t\t\t\tbounds.extend(place.geometry.location);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// map.fitBounds(bounds);\n\t\t});\n\n\t\t//polygon testing\n\t\tlet polygonArray = [];\n\t\tlet myMarkers = [];\n\t\tdrawingManager.addListener(\"polygoncomplete\", function(polygon) {\n\t\t\t//add a listener to the polygon so we can do things to it.\n\t\t\t//\n\t\t\tgoogle.maps.event.addListener(polygon, \"click\", function(event) {\n\t\t\t\tconsole.log(polygon);\n\t\t\t\t//remove polygon on click\n\t\t\t\tpolygon.setMap(null);\n\t\t\t});\n\n\t\t\tvar coordinates = polygon.getPath().getArray();\n\t\t\tpolygonArray.push(polygon);\n\t\t\tif (polygonArray.length > 1) {\n\t\t\t\tconsole.log(\"changing previous polygon color\");\n\t\t\t\tpolygonArray[polygonArray.length - 2].fillColor = \"#ff00ff\";\n\t\t\t\tpolygonArray[polygonArray.length - 2].setMap(null);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tpolygonArray[polygonArray.length - 2].setMap(map);\n\t\t\t\t}, 10);\n\t\t\t}\n\t\t\tconsole.log(\"the polygon array includes: \", polygonArray);\n\n\t\t\t// console.log(coordinates);\n\t\t\tconsole.info(\"The coordinates that make up the polygon are\");\n\t\t\t//log each set up lat long for the polygon\n\t\t\tvar dimensionsString = \"<br>DIMENSIONS: <br>\";\n\t\t\tif (coordinates.length > 1) {\n\t\t\t\tcoordinates.forEach(function(coord, index) {\n\t\t\t\t\tconsole.log(coord.lat(), coord.lng(), index);\n\n\t\t\t\t\tif (index < coordinates.length - 1) {\n\t\t\t\t\t\tlet distance = distanceInKmBetweenEarthCoordinates(\n\t\t\t\t\t\t\tcoordinates[index].lat(),\n\t\t\t\t\t\t\tcoordinates[index].lng(),\n\t\t\t\t\t\t\tcoordinates[index + 1].lat(),\n\t\t\t\t\t\t\tcoordinates[index + 1].lng()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdimensionsString =\n\t\t\t\t\t\t\tdimensionsString +\n\t\t\t\t\t\t\t(distance * 1000 * 3.2808).toFixed(2) +\n\t\t\t\t\t\t\t\" feet  <br> by \";\n\t\t\t\t\t\tconsole.log(distance.toFixed(4), \"km in length\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet distance = distanceInKmBetweenEarthCoordinates(\n\t\t\t\t\t\t\tcoordinates[index].lat(),\n\t\t\t\t\t\t\tcoordinates[index].lng(),\n\t\t\t\t\t\t\tcoordinates[0].lat(),\n\t\t\t\t\t\t\tcoordinates[0].lng()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdimensionsString =\n\t\t\t\t\t\t\tdimensionsString +\n\t\t\t\t\t\t\t(distance * 1000 * 3.2808).toFixed(2) +\n\t\t\t\t\t\t\t\" feet\";\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tconsole.log(\"dimensionsString \", dimensionsString);\n\n\t\t\t//grab and attach value in square feet to the input box with id sqfeet\n\t\t\tvar sqFeet =\n\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath()) * 10.7639;\n\t\t\tdocument.getElementById(\"sqfeet\").value =\n\t\t\t\tsqFeet.toFixed(3) + \" Square Feet\";\n\t\t\t//log area in square meters\n\t\t\tconsole.log(\n\t\t\t\t\"Its area in square meters\",\n\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t);\n\t\t\tconsole.log(sqFeet, \" is the square feet.\");\n\n\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\tposition: coordinates[0],\n\t\t\t\tmap: map,\n\t\t\t\ttitle: \"Dimensions\"\n\t\t\t});\n\t\t\tmyMarkers.push(marker);\n\t\t\tconsole.log(\"markers\", myMarkers);\n\t\t\tmarker.setMap(map);\n\t\t\tsetTimeout(function() {\n\t\t\t\tmarker.setMap(null);\n\t\t\t}, 2000);\n\n\t\t\t//create a marker at the point of the first coordinate of each polygon created.\n\t\t\t// google.maps.Marker({\n\t\t\t// \tposition: coordinates[0],\n\t\t\t// \tmap: Map,\n\t\t\t// \ttitle:\n\t\t\t// \t\tMath.round(\n\t\t\t// \t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath())\n\t\t\t// \t\t) *\n\t\t\t// \t\t\t10.7639 +\n\t\t\t// \t\t\" Square Feet\"\n\t\t\t// });\n\t\t\t//Create a popup window and then add a click listener to open the popup on click or hover\n\t\t\tvar infowindow = new google.maps.InfoWindow({\n\t\t\t\tcontent:\n\t\t\t\t\t\"SQUARE FEET:<br>\" +\n\t\t\t\t\t(\n\t\t\t\t\t\tgoogle.maps.geometry.spherical.computeArea(polygon.getPath()) *\n\t\t\t\t\t\t10.7639\n\t\t\t\t\t).toFixed() +\n\t\t\t\t\tdimensionsString\n\t\t\t});\n\n\t\t\tmarker.addListener(\"click\", function() {\n\t\t\t\tinfowindow.open(Map, marker);\n\t\t\t});\n\t\t\tmarker.addListener(\"mouseover\", function() {\n\t\t\t\tconsole.log(\"hovering\");\n\t\t\t\tinfowindow.open(Map, marker);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tinfowindow.close();\n\t\t\t\t}, 3000);\n\t\t\t});\n\t\t\tinfowindow.open(Map, marker);\n\t\t});\n\n\t\t/*events and listeners and blah blah*/\n\n\t\tdrawingManager.polygonOptions.fillColor = \"#00FF00\";\n\n\t\tvar legal = document.getElementById(\"isLegal\");\n\t\tlegal.addEventListener(\"click\", function() {\n\t\t\tconsole.log(\"inside init and islegal is clicked.\");\n\t\t\tdrawingManager.polygonOptions.fillColor = \"#00FF00\";\n\t\t});\n\t\tvar prohibited = document.getElementById(\"isProhibited\");\n\t\tprohibited.addEventListener(\"click\", function() {\n\t\t\tconsole.log(\"inside init and prohibited is clicked.\");\n\t\t\tdrawingManager.polygonOptions.fillColor = \"#ff0000\";\n\t\t});\n\n\t\tvar degreesToRadians = function(degrees) {\n\t\t\treturn (degrees * Math.PI) / 180;\n\t\t};\n\t\tvar distanceInKmBetweenEarthCoordinates = function(lat1, lon1, lat2, lon2) {\n\t\t\tvar earthRadiusKm = 6371;\n\n\t\t\tvar dLat = degreesToRadians(lat2 - lat1);\n\t\t\tvar dLon = degreesToRadians(lon2 - lon1);\n\n\t\t\tlat1 = degreesToRadians(lat1);\n\t\t\tlat2 = degreesToRadians(lat2);\n\n\t\t\tvar a =\n\t\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\t\tMath.sin(dLon / 2) *\n\t\t\t\t\tMath.sin(dLon / 2) *\n\t\t\t\t\tMath.cos(lat1) *\n\t\t\t\t\tMath.cos(lat2);\n\t\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\t\treturn earthRadiusKm * c;\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Square Feet</h2>\n\t\t\t\t\t\t<input type=\"text\" id=\"sqfeet\" placeholder=\"value goes here\" />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2>Mark Legal or Prohibited</h2>\n\n\t\t\t\t\t<div id=\"legals\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"legal\"\n\t\t\t\t\t\t\tvalue=\"legal\"\n\t\t\t\t\t\t\tid=\"isLegal\"\n\t\t\t\t\t\t\t// onClick={this.clickLegalHandler}\n\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\tLegal\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"legal\"\n\t\t\t\t\t\t\tvalue=\"prohibited\"\n\t\t\t\t\t\t\tid=\"isProhibited\"\n\t\t\t\t\t\t\t// onClick={this.clickProhibitedHandler}\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\tProhibited\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<div id=\"searchWindow\">\n\t\t\t\t\t<label>Search Bar</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input type=\"text\" id=\"\" placeholder=\"search for a city\" />\n\t\t\t\t</div>\n\t\t\t\t<Map\n\t\t\t\t\tstyle={{ width: \"90%\" }}\n\t\t\t\t\tgoogle={window.google}\n\t\t\t\t\tonReady={this.initMap}\n\t\t\t\t\tonClick={this.onMapClicked}\n\t\t\t\t\tinitialCenter={{ lat: 47.6062, lng: -122.3321 }}\n\t\t\t\t\tzoom={15}\n\t\t\t\t\tscaleControl\n\t\t\t\t\teMapApiInternals>\n\t\t\t\t\t{/* <Marker\n\t\t\t\t\t\ttitle={\"The marker`s title will appear as a tooltip.\"}\n\t\t\t\t\t\tname={\"Downtown\"}\n\t\t\t\t\t\tposition={{ lat: 47.60629, lng: -122.3321 }}\n\t\t\t\t\t/> */}\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: \"AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\",\n\tlibraries: [\"drawing\", \"places\"]\n})(DrawingMap);\n\n// AIzaSyAKWE1JinLb5yLSoxHiEjiq1CMuOqbx_s4\n"]},"metadata":{},"sourceType":"module"}